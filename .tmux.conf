# tmux default shell
set-option -g default-shell /usr/local/bin/zsh # OS X
# set-option -g default-shell /usr/bin/zsh # Ubuntu

# # vim uses clipboard settings tmux
# OS X
if-shell "test $OSTYPE = darwin\* ; echo $? -eq 0" "set-option -g default-command 'reattach-to-user-namespace -l zsh'"

# Ubuntu
 # if-shell "test $OSTYPE = linux-gnu ; echo $? -eq 0" "bind -t vi-copy y copy-pipe 'xclip -sel clip -i'"

# change prefix key
unbind-key C-b
set-option -g prefix C-t
bind-key C-t send-prefix

# setting tmux status line
set-option -g status on
set-option -g status-interval 1
# set-option -g status-justify "centre"
set-option -g status-left "[S:#S] "
set-option -g status-left-length 50
set-option -g status-right "%y/%m/%d(%a) %T"
set-option -g status-right-length 50

set-window-option -g window-status-format "#I:#W"
set-window-option -g window-status-current-format "#I:#W"

#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=black,bg=red #base02, red

# mouse on
set-option -g mouse on

# window number base 1
set-option -g base-index 1

# ESC key improve effective
set -s escape-time 0
# set == set-option

# tmuxのカラーを256色に設定
set-option -g default-terminal "screen-256color"

# new-window current directory
bind c new-window -c "#{pane_current_path}" # for only OS X

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h
# move around panes with hjkl, as one would in vim after pressing ctrl-w bind h select-pane -L bind j select-pane -D
bind k select-pane -U
# bind k select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

# yでヤンク
# OS X
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'

# ubuntu
# bind-key -t vi-copy y copy-pipe "xclip -sel clip -i"
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "xclip -sel clip -i"

# vでビジュアルモード
bind -T copy-mode-vi v send-keys -X begin-selection

# pでペースト
bind p paste-buffer

# lで前のウィンドウ
bind l previous-window

# peco window setting
bind-key w split-window -c '#{pane_current_path}' "tmux list-windows -F '#{window_index}: #{window_name}#{window_flags} (#{window_panes} panes) #{pane_current_path} #{?window_active, (active),}' | peco --initial-index $(tmux lsw | awk '/active.$/ {print NR-1}') | cut -d':' -f 1 | xargs tmux select-window -t"

